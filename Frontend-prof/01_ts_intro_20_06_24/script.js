var isLoading = true; //добавили типизацию
isLoading = false;
// isLoading = 4; //ошибка типа, который мы указали выше
var num = 42;
// num = 'hello'; // num был типизирован по первому значению потому выдает ошибку
var num1 = 42; // будет типизировано либо число, либо строка
num1 = 'hello'; // не будет выдавать ошибку. но обязаны вводить типизацию через или, иначе будет  дефолтного значения
var stat = 'loading';
//Primitives types: boolean, number (абсолютно дбое число), string, null, undefined, void(ничего не возвразает), 
// доп типы, редко испльзуются: any (любой тип данных, отключает типизвцию), unknown (когда ихначально неизвестно, нужна сначала проверить типизцию), symbol (похволяет получить из строки его числовой эквивалент), bigInt
// stat = 'suces' //вписываем сразу все варианты отоюражения (перечисляем). выдает ошибку из-за неправильно написанного слова
var notSure = 4; // пока не типизирован. 
if (typeof notSure === 'number') {
    var value = notSure; // если тип число, то присвой значение notSure переменной value
}
var arr = ['one', 'two', 'three']; //сохрвняет массив по ссылке, а не значению. добавили типизацию как массив строк.(строки в массиве). позже добавили вариативность строк или чисел массив. тут добавили или симло или срока и все это в массиве
// const arr: string[] | number[] = ['one', 'two', 'three'] // типизация только массив из чисел или массив из строк.
//(number | string)[] - массив из чисел или строк
//number | string[] - либо число, либо массив строк
//number[] | string[] - массив ТОЛЬКО из чисел или ТОЛЬКО из строк
arr.push(5); //ошибка типов. уже прняли тип как массив строк
